name: Haskell CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    name: ${{ matrix.name }}
    env:
      # ------------------------------------------------------------------------
      # Common options
      # ------------------------------------------------------------------------
      CABAL_REINIT_CONFIG: y
      LC_ALL: C.UTF-8
      DISABLE_TEST: n

      # ------------------------------------------------------------------------
      # cabal options
      # ------------------------------------------------------------------------
      CABAL_CHECK_RELAX: y
      CABAL_NO_SANDBOX: y
      CABAL_HACKAGE_MIRROR: "hackage.haskell.org:http://hackage.fpcomplete.com"

      # ------------------------------------------------------------------------
      # Location of packcheck.sh
      # ------------------------------------------------------------------------
      PACKCHECK_LOCAL_PATH: "./packcheck.sh"
      PACKCHECK_GITHUB_URL: "https://raw.githubusercontent.com/composewell/packcheck"
      PACKCHECK_GITHUB_COMMIT: "v0.6.0"

      # ------------------------------------------------------------------------
      # Build options
      # ------------------------------------------------------------------------
      BUILD: cabal-v2 ${{ matrix.pack_options }}
      GHCVER: ${{ matrix.ghc_version }}

    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        name:
          - 8.0.2
          - 8.2.2
          - 8.4.4
          - 8.6.5
          - 8.8.4
          - 8.8.4+macOS+exe
          - 8.10.7+exe
          - 9.0.2
          - 9.2.6+exe
          - 9.4.4
          - 9.6.0
          - head
          - hlint

        include:

          - name: 8.0.2
            ghc_version: 8.0.2
            runner: ubuntu-latest
            cabal_version: 3.2
            pack_options: DISABLE_TEST=y

          - name: 8.2.2
            ghc_version: 8.2.2
            runner: ubuntu-latest
            cabal_version: 3.2
            pack_options: DISABLE_TEST=y

          - name: 8.4.4
            ghc_version: 8.4.4
            runner: ubuntu-latest
            cabal_version: 3.2
            pack_options: DISABLE_TEST=y

          - name: 8.6.5
            ghc_version: 8.6.5
            runner: ubuntu-latest
            cabal_version: 3.2

          - name: 8.8.4
            ghc_version: 8.8.4
            runner: ubuntu-latest
            cabal_version: 3.2

          - name: 8.8.4+macOS+exe
            ghc_version: 8.8.4
            pack_options: CABAL_BUILD_OPTIONS="-f ucd2haskell"
            runner: macos-latest
            cabal_version: 3.2

          - name: 8.10.7+exe
            ghc_version: 8.10.7
            pack_options: CABAL_BUILD_OPTIONS="-f ucd2haskell"
            runner: ubuntu-latest
            cabal_version: 3.2

          - name: 9.0.2
            ghc_version: 9.0.2
            runner: ubuntu-latest
            cabal_version: 3.2

            # [NOTE] Last GHC version that can build ucd2haskell
          - name: 9.2.6+exe
            ghc_version: 9.2.6
            pack_options: CABAL_BUILD_OPTIONS="-f ucd2haskell"
            runner: ubuntu-latest
            cabal_version: 3.6

          - name: 9.4.4
            ghc_version: 9.4.4
            runner: ubuntu-latest
            cabal_version: 3.8.1.0

          # [TODO] Once GHC 9.6.1 is published and supported by ghcup:
          # • Remove release channel
          # • Set GHC version to 9.6.1
          # • Set Cabal version to 3.10
          - name: 9.6.0
            ghc_version: 9.6.0.20230128
            ghcup_release_channel: "https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-prereleases-0.0.7.yaml"
            runner: ubuntu-latest
            cabal_version: 3.8.1.0

          # [TODO] Use latest cabal (pre-)release
          - name: head
            ghc_version: head
            # ghcup_release_channel: "https://raw.githubusercontent.com/haskell/ghcup-metadata/master/ghcup-prereleases-0.0.7.yaml"
            runner: ubuntu-latest
            # cabal_version: 3.9.0.0
            cabal_version: latest

          - name: hlint
            pack_options: HLINT_OPTIONS="lint" HLINT_TARGETS="lib exe"
            runner: ubuntu-latest
            cabal_version: 3.2

    steps:
    - uses: actions/checkout@v3

    - uses: haskell/actions/setup@v2
      if: ${{ matrix.ghc_version != 'head' }}
      with:
        ghc-version: ${{ matrix.ghc_version }}
        ghcup-release-channel: ${{ matrix.ghcup_release_channel }}
        cabal-version: ${{ matrix.cabal_version }}

    # Adapted from https://github.com/composewell/streamly/blob/master/.github/workflows/haskell.yml
    - name: Install GHC head environment
      if: ${{ matrix.ghc_version == 'head' }}
      run: |
        # Install ghcup
        CURL=$(which curl)
        os=$(uname -s -m)
        case "$os" in
          "Linux x86_64") GHCUP_ARCH="x86_64-linux" ;;
          "Darwin x86_64") GHCUP_ARCH="x86_64-apple-darwin" ;;
          *) echo "Unknown OS/Arch: $os"; exit 1;;
        esac
        # Check available versions here: https://downloads.haskell.org/~ghcup/
        GHCUP_VER=0.1.19.0
        $CURL -sL -o ./ghcup https://downloads.haskell.org/~ghcup/$GHCUP_VER/${GHCUP_ARCH}-ghcup-$GHCUP_VER
        chmod +x ./ghcup
        # Install GHC head
        # The URL may change, to find a working URL go to https://gitlab.haskell.org/ghc/ghc/-/jobs/
        # Find a debian10 job, click on a passed/failed job, at the
        # end of the output you will find the tar.xz name, put that after
        # "raw/", and put the job name after "job=".
        # Also see https://github.com/mpickering/ghc-artefact-nix/blob/master/gitlab-artifact.nix
        ./ghcup install ghc -u https://gitlab.haskell.org/ghc/ghc/-/jobs/artifacts/master/raw/ghc-x86_64-linux-deb10-int_native-validate.tar.xz?job=x86_64-linux-deb10-int_native-validate head
        ./ghcup set ghc ${{ matrix.ghc_version }}
        # Install cabal
        ./ghcup install cabal ${{ matrix.cabal_version }}
        ./ghcup set cabal ${{ matrix.cabal_version }}

    - uses: actions/cache@v3
      name: Cache ~/.cabal
      with:
        path: ~/.cabal
        key: ${{ runner.os }}-${{ matrix.ghc_version }}-cabal

    - name: Download packcheck
      run: |
        # If a custom stack-yaml is specified, replace the default with that
        if test -e "$STACK_YAML"; then rm -f stack.yaml && ln -sv $STACK_YAML stack.yaml; else true; fi
        unset STACK_YAML

        # Get packcheck if needed
        CURL=$(which curl)
        PACKCHECK_URL=${PACKCHECK_GITHUB_URL}/${PACKCHECK_GITHUB_COMMIT}/packcheck.sh
        if test ! -e "$PACKCHECK_LOCAL_PATH"; then $CURL -sL -o "$PACKCHECK_LOCAL_PATH" $PACKCHECK_URL; fi;
        chmod +x $PACKCHECK_LOCAL_PATH

    - name: Run packcheck
      run: |
        bash -c "$PACKCHECK_LOCAL_PATH $BUILD"
